{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\react\\\\01-starting-project\\\\src\\\\components\\\\Store\\\\auth-context.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false\n});\nconst AuthContextProvider = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const localStorageStatus = localStorage.getItem(\"isLoggedIn\");\n  useEffect(() => {\n    if (localStorageStatus === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    localStorage.setItem(\"isLoggedIn\", \"0\");\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContextProvider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      on\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = AuthContextProvider;\nexport { AuthContext, AuthContextProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["useEffect","useState","React","jsxDEV","_jsxDEV","AuthContext","createContext","isLoggedIn","AuthContextProvider","_s","setIsLoggedIn","localStorageStatus","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","value","onLogout","on","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/react/01-starting-project/src/components/Store/auth-context.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n  isLoggedIn: false,\r\n});\r\n\r\nconst AuthContextProvider = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const localStorageStatus = localStorage.getItem(\"isLoggedIn\");\r\n\r\n  useEffect(() => {\r\n    if (localStorageStatus === \"1\") {\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  const loginHandler = (email, password) => {\r\n    // We should of course check email and password\r\n    // But it's just a dummy/ demo anyways\r\n    localStorage.setItem(\"isLoggedIn\", \"1\");\r\n    setIsLoggedIn(true);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    localStorage.setItem(\"isLoggedIn\", \"0\");\r\n    setIsLoggedIn(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContextProvider\r\n      value={{\r\n        isLoggedIn: isLoggedIn,\r\n        onLogout: logoutHandler,\r\n        on\r\n      }}>\r\n    </AuthContextProvider>\r\n  )\r\n};\r\n\r\nexport { AuthContext, AuthContextProvider };\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAa,CAAC;EACtCC,UAAU,EAAE;AACd,CAAC,CAAC;AAEF,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACF,UAAU,EAAEG,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMU,kBAAkB,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAE7Db,SAAS,CAAC,MAAM;IACd,IAAIW,kBAAkB,KAAK,GAAG,EAAE;MAC9BD,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACxC;IACA;IACAJ,YAAY,CAACK,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;IACvCP,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMQ,aAAa,GAAGA,CAAA,KAAM;IAC1BN,YAAY,CAACK,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;IACvCP,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEN,OAAA,CAACI,mBAAmB;IAClBW,KAAK,EAAE;MACLZ,UAAU,EAAEA,UAAU;MACtBa,QAAQ,EAAEF,aAAa;MACvBG;IACF;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAE1B,CAAC;AAAChB,EAAA,CA/BID,mBAAmB;AAAAkB,EAAA,GAAnBlB,mBAAmB;AAiCzB,SAASH,WAAW,EAAEG,mBAAmB;AAAG,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}